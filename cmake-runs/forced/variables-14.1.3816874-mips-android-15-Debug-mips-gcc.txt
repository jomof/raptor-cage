set ANDROID=1
set ANDROID_ABI=mips
set ANDROID_ALLOW_UNDEFINED_SYMBOLS=FALSE
set ANDROID_AR=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ar.exe
set ANDROID_ARCH_NAME=mips
set ANDROID_ARM_MODE=thumb
set ANDROID_ASM_COMPILER=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc.exe
set ANDROID_COMPILER_FLAGS=-g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -mips32 -Wa,--noexecstack -Wformat -Werror=format-security
set ANDROID_COMPILER_FLAGS_CXX=
set ANDROID_COMPILER_FLAGS_DEBUG=-O0
set ANDROID_COMPILER_FLAGS_RELEASE=-O2 -DNDEBUG
set ANDROID_CXX_COMPILER=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-g++.exe
set ANDROID_CXX_STANDARD_LIBRARIES="C:/Users/jomof/.test/ndks/android-ndk-r14b/sources/cxx-stl/gnu-libstdc++/4.9/libs/mips/libgnustl_static.a"
set ANDROID_C_COMPILER=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc.exe
set ANDROID_DISABLE_NO_EXECUTE=FALSE
set ANDROID_DISABLE_RELRO=FALSE
set ANDROID_FUNCTION_LEVEL_LINKING=TRUE
set ANDROID_GOLD_LINKER=TRUE
set ANDROID_HEADER_TRIPLE=mipsel-linux-android
set ANDROID_HOST_TAG=windows-x86_64
set ANDROID_LINKER_FLAGS=-Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now
set ANDROID_LINKER_FLAGS_EXE=-Wl,--gc-sections -Wl,-z,nocopyreloc
set ANDROID_LLVM_TRIPLE=mipsel-none-linux-android
set ANDROID_NATIVE_API_LEVEL=15
set ANDROID_NDK=C:/Users/jomof/.test/ndks/android-ndk-r14b
set ANDROID_NDK=C:/Users/jomof/.test/ndks/android-ndk-r14b
set ANDROID_NDK_ABI_NAME=mips
set ANDROID_NDK_HOST_SYSTEM_NAME=windows-x86_64
set ANDROID_NDK_HOST_X64=TRUE
set ANDROID_NDK_LAYOUT=RELEASE
set ANDROID_NDK_RELEASE=r141.3816874

set ANDROID_NDK_REVISION=141.3816874

set ANDROID_NDK_SOURCE_PROPERTIES=Pkg.Desc = Android NDK
Pkg.Revision = 14.1.3816874

set ANDROID_NDK_SOURCE_PROPERTIES_REGEX=^Pkg\.Desc = Android NDK
Pkg\.Revision = ([0-9]+)\.
set ANDROID_NOEXECSTACK=TRUE
set ANDROID_NO_UNDEFINED=TRUE
set ANDROID_PIE=FALSE
set ANDROID_PLATFORM=android-15
set ANDROID_PLATFORM_LEVEL=15
set ANDROID_RANLIB=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ranlib.exe
set ANDROID_RELRO=TRUE
set ANDROID_STL=gnustl_static
set ANDROID_STL_PREFIX=gnu-libstdc++/4.9
set ANDROID_STL_STATIC_LIBRARIES=gnustl_static
set ANDROID_SYSROOT=C:/Users/jomof/.test/ndks/android-ndk-r14b/platforms/android-15/arch-mips
set ANDROID_SYSROOT_ABI=mips
set ANDROID_TOOLCHAIN=gcc
set ANDROID_TOOLCHAIN_NAME=mips64el-linux-android-4.9
set ANDROID_TOOLCHAIN_PREFIX=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-
set ANDROID_TOOLCHAIN_ROOT=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64
set ANDROID_TOOLCHAIN_SUFFIX=.exe
set CAP=variables-14.1.3816874-mips-android-15-Debug-mips.txt
set CMAKE_ANDROID_ARCH_ABI=mips
set CMAKE_ANDROID_ARCH_ABI=mips
set CMAKE_ANDROID_NDK=C:\Users\jomof\.test\ndks\android-ndk-r14b
set CMAKE_AR=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ar.exe
set CMAKE_AR=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ar.exe
set CMAKE_ASM_FLAGS=-g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -mips32 -Wa,--noexecstack -Wformat -Werror=format-security -g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -mips32 -Wa,--noexecstack -Wformat -Werror=format-security 
set CMAKE_ASM_FLAGS=-g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -mips32 -Wa,--noexecstack -Wformat -Werror=format-security -g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -mips32 -Wa,--noexecstack -Wformat -Werror=format-security 
set CMAKE_ASM_FLAGS_DEBUG=-O0 -O0 
set CMAKE_ASM_FLAGS_DEBUG=-O0 -O0 
set CMAKE_ASM_FLAGS_RELEASE=-O2 -DNDEBUG -O2 -DNDEBUG 
set CMAKE_ASM_FLAGS_RELEASE=-O2 -DNDEBUG -O2 -DNDEBUG 
set CMAKE_AUTOMOC_COMPILER_PREDEFINES=ON
set CMAKE_AUTOMOC_MACRO_NAMES=Q_OBJECT;Q_GADGET;Q_NAMESPACE
set CMAKE_BASE_NAME=g++
set CMAKE_BINARY_DIR=C:/Users/jomof/BuildServer/build/test-isolated/12slpnh4cifzo/mylibrary/.externalNativeBuild/cmake/debug/mips
set CMAKE_BUILD_TOOL=C:\Users\jomof\AppData\Local\Android\Sdk\cmake\3.10.2.4988404\bin\ninja.exe
set CMAKE_BUILD_TYPE=Debug
set CMAKE_C11_COMPILE_FEATURES=
set CMAKE_C11_EXTENSION_COMPILE_OPTION=-std=gnu11
set CMAKE_C11_STANDARD_COMPILE_OPTION=-std=c11
set CMAKE_C90_COMPILE_FEATURES=
set CMAKE_C90_EXTENSION_COMPILE_OPTION=-std=gnu90
set CMAKE_C90_STANDARD_COMPILE_OPTION=-std=c90
set CMAKE_C99_COMPILE_FEATURES=
set CMAKE_C99_EXTENSION_COMPILE_OPTION=-std=gnu99
set CMAKE_C99_STANDARD_COMPILE_OPTION=-std=c99
set CMAKE_CFG_INTDIR=.
set CMAKE_COMMAND=C:/Users/jomof/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/bin/cmake.exe
set CMAKE_COMPILER_IS_GNUCC=1
set CMAKE_COMPILER_IS_GNUCXX=1
set CMAKE_CPACK_COMMAND=C:/Users/jomof/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/bin/cpack.exe
set CMAKE_CROSSCOMPILING=TRUE
set CMAKE_CTEST_COMMAND=C:/Users/jomof/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/bin/ctest.exe
set CMAKE_CUDA_IMPLICIT_INCLUDE_DIRECTORIES=/usr/include
set CMAKE_CURRENT_BINARY_DIR=C:/Users/jomof/BuildServer/build/test-isolated/12slpnh4cifzo/mylibrary/.externalNativeBuild/cmake/debug/mips
set CMAKE_CURRENT_LIST_DIR=C:/Users/jomof/BuildServer/build/test-isolated/12slpnh4cifzo/mylibrary
set CMAKE_CURRENT_LIST_FILE=C:/Users/jomof/BuildServer/build/test-isolated/12slpnh4cifzo/mylibrary/CMakeLists.txt
set CMAKE_CURRENT_SOURCE_DIR=C:/Users/jomof/BuildServer/build/test-isolated/12slpnh4cifzo/mylibrary
set CMAKE_CXX11_COMPILE_FEATURES=
set CMAKE_CXX11_EXTENSION_COMPILE_OPTION=-std=gnu++11
set CMAKE_CXX11_STANDARD_COMPILE_OPTION=-std=c++11
set CMAKE_CXX14_COMPILE_FEATURES=
set CMAKE_CXX14_EXTENSION_COMPILE_OPTION=-std=gnu++14
set CMAKE_CXX14_STANDARD_COMPILE_OPTION=-std=c++14
set CMAKE_CXX17_COMPILE_FEATURES=
set CMAKE_CXX98_COMPILE_FEATURES=
set CMAKE_CXX98_EXTENSION_COMPILE_OPTION=-std=gnu++98
set CMAKE_CXX98_STANDARD_COMPILE_OPTION=-std=c++98
set CMAKE_CXX_ARCHIVE_APPEND=<CMAKE_AR> q  <TARGET> <LINK_FLAGS> <OBJECTS>
set CMAKE_CXX_ARCHIVE_APPEND_IPO="C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ar.exe" r <TARGET> <LINK_FLAGS> <OBJECTS>
set CMAKE_CXX_ARCHIVE_CREATE=<CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS>
set CMAKE_CXX_ARCHIVE_CREATE_IPO="C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ar.exe" cr <TARGET> <LINK_FLAGS> <OBJECTS>
set CMAKE_CXX_ARCHIVE_FINISH=<CMAKE_RANLIB> <TARGET>
set CMAKE_CXX_ARCHIVE_FINISH_IPO="C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ranlib.exe" <TARGET>
set CMAKE_CXX_CL_SHOWINCLUDES_PREFIX=
set CMAKE_CXX_COMPILER=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-g++.exe
set CMAKE_CXX_COMPILER=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-g++.exe
set CMAKE_CXX_COMPILER_ABI=
set CMAKE_CXX_COMPILER_AR=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ar.exe
set CMAKE_CXX_COMPILER_AR=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ar.exe
set CMAKE_CXX_COMPILER_ARCHITECTURE_ID=
set CMAKE_CXX_COMPILER_ARG1=
set CMAKE_CXX_COMPILER_ENV_VAR=CXX
set CMAKE_CXX_COMPILER_FORCED=true
set CMAKE_CXX_COMPILER_ID=GNU
set CMAKE_CXX_COMPILER_ID_PLATFORM_CONTENT=#define STRINGIFY_HELPER(X) #X
#define STRINGIFY(X) STRINGIFY_HELPER(X)

/* Identify known platforms by name.  */
#if defined(__linux) || defined(__linux__) || defined(linux)
# define PLATFORM_ID "Linux"

#elif defined(__CYGWIN__)
# define PLATFORM_ID "Cygwin"

#elif defined(__MINGW32__)
# define PLATFORM_ID "MinGW"

#elif defined(__APPLE__)
# define PLATFORM_ID "Darwin"

#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
# define PLATFORM_ID "Windows"

#elif defined(__FreeBSD__) || defined(__FreeBSD)
# define PLATFORM_ID "FreeBSD"

#elif defined(__NetBSD__) || defined(__NetBSD)
# define PLATFORM_ID "NetBSD"

#elif defined(__OpenBSD__) || defined(__OPENBSD)
# define PLATFORM_ID "OpenBSD"

#elif defined(__sun) || defined(sun)
# define PLATFORM_ID "SunOS"

#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
# define PLATFORM_ID "AIX"

#elif defined(__sgi) || defined(__sgi__) || defined(_SGI)
# define PLATFORM_ID "IRIX"

#elif defined(__hpux) || defined(__hpux__)
# define PLATFORM_ID "HP-UX"

#elif defined(__HAIKU__)
# define PLATFORM_ID "Haiku"

#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
# define PLATFORM_ID "BeOS"

#elif defined(__QNX__) || defined(__QNXNTO__)
# define PLATFORM_ID "QNX"

#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
# define PLATFORM_ID "Tru64"

#elif defined(__riscos) || defined(__riscos__)
# define PLATFORM_ID "RISCos"

#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
# define PLATFORM_ID "SINIX"

#elif defined(__UNIX_SV__)
# define PLATFORM_ID "UNIX_SV"

#elif defined(__bsdos__)
# define PLATFORM_ID "BSDOS"

#elif defined(_MPRAS) || defined(MPRAS)
# define PLATFORM_ID "MP-RAS"

#elif defined(__osf) || defined(__osf__)
# define PLATFORM_ID "OSF1"

#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
# define PLATFORM_ID "SCO_SV"

#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
# define PLATFORM_ID "ULTRIX"

#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
# define PLATFORM_ID "Xenix"

#elif defined(__WATCOMC__)
# if defined(__LINUX__)
#  define PLATFORM_ID "Linux"

# elif defined(__DOS__)
#  define PLATFORM_ID "DOS"

# elif defined(__OS2__)
#  define PLATFORM_ID "OS2"

# elif defined(__WINDOWS__)
#  define PLATFORM_ID "Windows3x"

# else /* unknown platform */
#  define PLATFORM_ID
# endif

#else /* unknown platform */
# define PLATFORM_ID

#endif

/* For windows compilers MSVC and Intel we can determine
   the architecture of the compiler being used.  This is because
   the compilers do not have flags that can change the architecture,
   but rather depend on which compiler is being used
*/
#if defined(_WIN32) && defined(_MSC_VER)
# if defined(_M_IA64)
#  define ARCHITECTURE_ID "IA64"

# elif defined(_M_X64) || defined(_M_AMD64)
#  define ARCHITECTURE_ID "x64"

# elif defined(_M_IX86)
#  define ARCHITECTURE_ID "X86"

# elif defined(_M_ARM64)
#  define ARCHITECTURE_ID "ARM64"

# elif defined(_M_ARM)
#  if _M_ARM == 4
#   define ARCHITECTURE_ID "ARMV4I"
#  elif _M_ARM == 5
#   define ARCHITECTURE_ID "ARMV5I"
#  else
#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
#  endif

# elif defined(_M_MIPS)
#  define ARCHITECTURE_ID "MIPS"

# elif defined(_M_SH)
#  define ARCHITECTURE_ID "SHx"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__WATCOMC__)
# if defined(_M_I86)
#  define ARCHITECTURE_ID "I86"

# elif defined(_M_IX86)
#  define ARCHITECTURE_ID "X86"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
# if defined(__ICCARM__)
#  define ARCHITECTURE_ID "ARM"

# elif defined(__ICCAVR__)
#  define ARCHITECTURE_ID "AVR"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif
#else
#  define ARCHITECTURE_ID
#endif

/* Convert integer to decimal digit literals.  */
#define DEC(n)                   \
  ('0' + (((n) / 10000000)%10)), \
  ('0' + (((n) / 1000000)%10)),  \
  ('0' + (((n) / 100000)%10)),   \
  ('0' + (((n) / 10000)%10)),    \
  ('0' + (((n) / 1000)%10)),     \
  ('0' + (((n) / 100)%10)),      \
  ('0' + (((n) / 10)%10)),       \
  ('0' +  ((n) % 10))

/* Convert integer to hex digit literals.  */
#define HEX(n)             \
  ('0' + ((n)>>28 & 0xF)), \
  ('0' + ((n)>>24 & 0xF)), \
  ('0' + ((n)>>20 & 0xF)), \
  ('0' + ((n)>>16 & 0xF)), \
  ('0' + ((n)>>12 & 0xF)), \
  ('0' + ((n)>>8  & 0xF)), \
  ('0' + ((n)>>4  & 0xF)), \
  ('0' + ((n)     & 0xF))

/* Construct a string literal encoding the version number components. */
#ifdef COMPILER_VERSION_MAJOR
char const info_version[] = {
  'I', 'N', 'F', 'O', ':',
  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
  COMPILER_VERSION_MAJOR,
# ifdef COMPILER_VERSION_MINOR
  '.', COMPILER_VERSION_MINOR,
#  ifdef COMPILER_VERSION_PATCH
   '.', COMPILER_VERSION_PATCH,
#   ifdef COMPILER_VERSION_TWEAK
    '.', COMPILER_VERSION_TWEAK,
#   endif
#  endif
# endif
  ']','\0'};
#endif

/* Construct a string literal encoding the internal version number. */
#ifdef COMPILER_VERSION_INTERNAL
char const info_version_internal[] = {
  'I', 'N', 'F', 'O', ':',
  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
  'i','n','t','e','r','n','a','l','[',
  COMPILER_VERSION_INTERNAL,']','\0'};
#endif

/* Construct a string literal encoding the version number components. */
#ifdef SIMULATE_VERSION_MAJOR
char const info_simulate_version[] = {
  'I', 'N', 'F', 'O', ':',
  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
  SIMULATE_VERSION_MAJOR,
# ifdef SIMULATE_VERSION_MINOR
  '.', SIMULATE_VERSION_MINOR,
#  ifdef SIMULATE_VERSION_PATCH
   '.', SIMULATE_VERSION_PATCH,
#   ifdef SIMULATE_VERSION_TWEAK
    '.', SIMULATE_VERSION_TWEAK,
#   endif
#  endif
# endif
  ']','\0'};
#endif

/* Construct the string literal in pieces to prevent the source from
   getting matched.  Store it in a pointer rather than an array
   because some compilers will just produce instructions to fill the
   array rather than assigning a pointer to a static array.  */
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";


set CMAKE_CXX_COMPILER_ID_RUN=1
set CMAKE_CXX_COMPILER_ID_TEST_FLAGS=-c;--c++;--ec++
set CMAKE_CXX_COMPILER_ID_TOOL_MATCH_INDEX=2
set CMAKE_CXX_COMPILER_ID_TOOL_MATCH_REGEX=
Ld[^
]*(
[ 	]+[^
]*)*
[ 	]+([^ 	
]+)[^
]*-o[^
]*CompilerIdCXX/(\./)?(CompilerIdCXX.xctest/)?CompilerIdCXX[ 	
\"]
set CMAKE_CXX_COMPILER_ID_VENDORS=IAR
set CMAKE_CXX_COMPILER_ID_VENDOR_REGEX_IAR=IAR .+ Compiler
set CMAKE_CXX_COMPILER_LOADED=1
set CMAKE_CXX_COMPILER_NAMES=CC
set CMAKE_CXX_COMPILER_PRODUCED_FILES=CMakeCXXCompilerId.o
set CMAKE_CXX_COMPILER_PRODUCED_OUTPUT=
set CMAKE_CXX_COMPILER_RANLIB=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ranlib.exe
set CMAKE_CXX_COMPILER_RANLIB=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ranlib.exe
set CMAKE_CXX_COMPILER_VERSION=4.9.0
set CMAKE_CXX_COMPILER_VERSION_INTERNAL=
set CMAKE_CXX_COMPILER_WORKS=TRUE
set CMAKE_CXX_COMPILER_WRAPPER=
set CMAKE_CXX_COMPILE_FEATURES=
set CMAKE_CXX_COMPILE_OBJECT=<CMAKE_CXX_COMPILER>  <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE>
set CMAKE_CXX_COMPILE_OPTIONS_IPO=-flto;-fno-fat-lto-objects
set CMAKE_CXX_COMPILE_OPTIONS_PIC=-fPIC
set CMAKE_CXX_COMPILE_OPTIONS_PIE=-fPIE
set CMAKE_CXX_COMPILE_OPTIONS_SYSROOT=--sysroot=
set CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY=-fvisibility=
set CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY_INLINES_HIDDEN=-fvisibility-inlines-hidden
set CMAKE_CXX_CREATE_ASSEMBLY_SOURCE=<CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE>
set CMAKE_CXX_CREATE_PREPROCESSED_SOURCE=<CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE>
set CMAKE_CXX_CREATE_SHARED_LIBRARY=<CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>
set CMAKE_CXX_CREATE_SHARED_MODULE=<CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>
set CMAKE_CXX_FLAGS=-g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -mips32 -Wa,--noexecstack -Wformat -Werror=format-security  -g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -mips32 -Wa,--noexecstack -Wformat -Werror=format-security  
set CMAKE_CXX_FLAGS=-g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -mips32 -Wa,--noexecstack -Wformat -Werror=format-security  -g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -mips32 -Wa,--noexecstack -Wformat -Werror=format-security  
set CMAKE_CXX_FLAGS_DEBUG=-O0 -O0 
set CMAKE_CXX_FLAGS_DEBUG=-O0 -O0 
set CMAKE_CXX_FLAGS_DEBUG_INIT=-g
set CMAKE_CXX_FLAGS_INIT=
set CMAKE_CXX_FLAGS_MINSIZEREL=-Os -DNDEBUG
set CMAKE_CXX_FLAGS_MINSIZEREL_INIT=-Os -DNDEBUG
set CMAKE_CXX_FLAGS_RELEASE=-O2 -DNDEBUG -O2 -DNDEBUG 
set CMAKE_CXX_FLAGS_RELEASE=-O2 -DNDEBUG -O2 -DNDEBUG 
set CMAKE_CXX_FLAGS_RELEASE_INIT=-O3 -DNDEBUG
set CMAKE_CXX_FLAGS_RELWITHDEBINFO=-O2 -g -DNDEBUG
set CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT=-O2 -g -DNDEBUG
set CMAKE_CXX_IGNORE_EXTENSIONS=inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC
set CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES=/usr/include
set CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES=
set CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES=
set CMAKE_CXX_IMPLICIT_LINK_LIBRARIES=
set CMAKE_CXX_INFORMATION_LOADED=1
set CMAKE_CXX_LIBRARY_ARCHITECTURE=
set CMAKE_CXX_LINKER_PREFERENCE=30
set CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES=1
set CMAKE_CXX_LINK_EXECUTABLE=<CMAKE_CXX_COMPILER>  <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES>
set CMAKE_CXX_OUTPUT_EXTENSION=.o
set CMAKE_CXX_PLATFORM_ID=Linux
set CMAKE_CXX_SIMULATE_ID=
set CMAKE_CXX_SIMULATE_VERSION=
set CMAKE_CXX_SIZEOF_DATA_PTR=
set CMAKE_CXX_SOURCE_FILE_EXTENSIONS=C;M;c++;cc;cpp;cxx;mm;CPP
set CMAKE_CXX_STANDARD_COMPUTED_DEFAULT=98
set CMAKE_CXX_STANDARD_DEFAULT=98
set CMAKE_CXX_STANDARD_INCLUDE_DIRECTORIES=C:/Users/jomof/.test/ndks/android-ndk-r14b/sources/cxx-stl/gnu-libstdc++/4.9/include;C:/Users/jomof/.test/ndks/android-ndk-r14b/sources/cxx-stl/gnu-libstdc++/4.9/libs/mips/include;C:/Users/jomof/.test/ndks/android-ndk-r14b/sources/cxx-stl/gnu-libstdc++/4.9/include/backward
set CMAKE_CXX_STANDARD_LIBRARIES=-lm "C:/Users/jomof/.test/ndks/android-ndk-r14b/sources/cxx-stl/gnu-libstdc++/4.9/libs/mips/libgnustl_static.a"
set CMAKE_CXX_STANDARD_LIBRARIES_INIT=-lm "C:/Users/jomof/.test/ndks/android-ndk-r14b/sources/cxx-stl/gnu-libstdc++/4.9/libs/mips/libgnustl_static.a"
set CMAKE_CXX_VERBOSE_FLAG=-v
set CMAKE_CXX_XCODE_CURRENT_ARCH=
set CMAKE_C_ARCHIVE_APPEND=<CMAKE_AR> q  <TARGET> <LINK_FLAGS> <OBJECTS>
set CMAKE_C_ARCHIVE_APPEND_IPO="C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ar.exe" r <TARGET> <LINK_FLAGS> <OBJECTS>
set CMAKE_C_ARCHIVE_CREATE=<CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS>
set CMAKE_C_ARCHIVE_CREATE_IPO="C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ar.exe" cr <TARGET> <LINK_FLAGS> <OBJECTS>
set CMAKE_C_ARCHIVE_FINISH=<CMAKE_RANLIB> <TARGET>
set CMAKE_C_ARCHIVE_FINISH_IPO="C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ranlib.exe" <TARGET>
set CMAKE_C_CL_SHOWINCLUDES_PREFIX=
set CMAKE_C_COMPILER=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc.exe
set CMAKE_C_COMPILER=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc.exe
set CMAKE_C_COMPILER_ABI=
set CMAKE_C_COMPILER_AR=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ar.exe
set CMAKE_C_COMPILER_AR=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ar.exe
set CMAKE_C_COMPILER_ARCHITECTURE_ID=
set CMAKE_C_COMPILER_ARG1=
set CMAKE_C_COMPILER_ENV_VAR=CC
set CMAKE_C_COMPILER_FORCED=true
set CMAKE_C_COMPILER_ID=GNU
set CMAKE_C_COMPILER_ID_PLATFORM_CONTENT=#define STRINGIFY_HELPER(X) #X
#define STRINGIFY(X) STRINGIFY_HELPER(X)

/* Identify known platforms by name.  */
#if defined(__linux) || defined(__linux__) || defined(linux)
# define PLATFORM_ID "Linux"

#elif defined(__CYGWIN__)
# define PLATFORM_ID "Cygwin"

#elif defined(__MINGW32__)
# define PLATFORM_ID "MinGW"

#elif defined(__APPLE__)
# define PLATFORM_ID "Darwin"

#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
# define PLATFORM_ID "Windows"

#elif defined(__FreeBSD__) || defined(__FreeBSD)
# define PLATFORM_ID "FreeBSD"

#elif defined(__NetBSD__) || defined(__NetBSD)
# define PLATFORM_ID "NetBSD"

#elif defined(__OpenBSD__) || defined(__OPENBSD)
# define PLATFORM_ID "OpenBSD"

#elif defined(__sun) || defined(sun)
# define PLATFORM_ID "SunOS"

#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
# define PLATFORM_ID "AIX"

#elif defined(__sgi) || defined(__sgi__) || defined(_SGI)
# define PLATFORM_ID "IRIX"

#elif defined(__hpux) || defined(__hpux__)
# define PLATFORM_ID "HP-UX"

#elif defined(__HAIKU__)
# define PLATFORM_ID "Haiku"

#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
# define PLATFORM_ID "BeOS"

#elif defined(__QNX__) || defined(__QNXNTO__)
# define PLATFORM_ID "QNX"

#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
# define PLATFORM_ID "Tru64"

#elif defined(__riscos) || defined(__riscos__)
# define PLATFORM_ID "RISCos"

#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
# define PLATFORM_ID "SINIX"

#elif defined(__UNIX_SV__)
# define PLATFORM_ID "UNIX_SV"

#elif defined(__bsdos__)
# define PLATFORM_ID "BSDOS"

#elif defined(_MPRAS) || defined(MPRAS)
# define PLATFORM_ID "MP-RAS"

#elif defined(__osf) || defined(__osf__)
# define PLATFORM_ID "OSF1"

#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
# define PLATFORM_ID "SCO_SV"

#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
# define PLATFORM_ID "ULTRIX"

#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
# define PLATFORM_ID "Xenix"

#elif defined(__WATCOMC__)
# if defined(__LINUX__)
#  define PLATFORM_ID "Linux"

# elif defined(__DOS__)
#  define PLATFORM_ID "DOS"

# elif defined(__OS2__)
#  define PLATFORM_ID "OS2"

# elif defined(__WINDOWS__)
#  define PLATFORM_ID "Windows3x"

# else /* unknown platform */
#  define PLATFORM_ID
# endif

#else /* unknown platform */
# define PLATFORM_ID

#endif

/* For windows compilers MSVC and Intel we can determine
   the architecture of the compiler being used.  This is because
   the compilers do not have flags that can change the architecture,
   but rather depend on which compiler is being used
*/
#if defined(_WIN32) && defined(_MSC_VER)
# if defined(_M_IA64)
#  define ARCHITECTURE_ID "IA64"

# elif defined(_M_X64) || defined(_M_AMD64)
#  define ARCHITECTURE_ID "x64"

# elif defined(_M_IX86)
#  define ARCHITECTURE_ID "X86"

# elif defined(_M_ARM64)
#  define ARCHITECTURE_ID "ARM64"

# elif defined(_M_ARM)
#  if _M_ARM == 4
#   define ARCHITECTURE_ID "ARMV4I"
#  elif _M_ARM == 5
#   define ARCHITECTURE_ID "ARMV5I"
#  else
#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
#  endif

# elif defined(_M_MIPS)
#  define ARCHITECTURE_ID "MIPS"

# elif defined(_M_SH)
#  define ARCHITECTURE_ID "SHx"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__WATCOMC__)
# if defined(_M_I86)
#  define ARCHITECTURE_ID "I86"

# elif defined(_M_IX86)
#  define ARCHITECTURE_ID "X86"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif

#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
# if defined(__ICCARM__)
#  define ARCHITECTURE_ID "ARM"

# elif defined(__ICCAVR__)
#  define ARCHITECTURE_ID "AVR"

# else /* unknown architecture */
#  define ARCHITECTURE_ID ""
# endif
#else
#  define ARCHITECTURE_ID
#endif

/* Convert integer to decimal digit literals.  */
#define DEC(n)                   \
  ('0' + (((n) / 10000000)%10)), \
  ('0' + (((n) / 1000000)%10)),  \
  ('0' + (((n) / 100000)%10)),   \
  ('0' + (((n) / 10000)%10)),    \
  ('0' + (((n) / 1000)%10)),     \
  ('0' + (((n) / 100)%10)),      \
  ('0' + (((n) / 10)%10)),       \
  ('0' +  ((n) % 10))

/* Convert integer to hex digit literals.  */
#define HEX(n)             \
  ('0' + ((n)>>28 & 0xF)), \
  ('0' + ((n)>>24 & 0xF)), \
  ('0' + ((n)>>20 & 0xF)), \
  ('0' + ((n)>>16 & 0xF)), \
  ('0' + ((n)>>12 & 0xF)), \
  ('0' + ((n)>>8  & 0xF)), \
  ('0' + ((n)>>4  & 0xF)), \
  ('0' + ((n)     & 0xF))

/* Construct a string literal encoding the version number components. */
#ifdef COMPILER_VERSION_MAJOR
char const info_version[] = {
  'I', 'N', 'F', 'O', ':',
  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
  COMPILER_VERSION_MAJOR,
# ifdef COMPILER_VERSION_MINOR
  '.', COMPILER_VERSION_MINOR,
#  ifdef COMPILER_VERSION_PATCH
   '.', COMPILER_VERSION_PATCH,
#   ifdef COMPILER_VERSION_TWEAK
    '.', COMPILER_VERSION_TWEAK,
#   endif
#  endif
# endif
  ']','\0'};
#endif

/* Construct a string literal encoding the internal version number. */
#ifdef COMPILER_VERSION_INTERNAL
char const info_version_internal[] = {
  'I', 'N', 'F', 'O', ':',
  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
  'i','n','t','e','r','n','a','l','[',
  COMPILER_VERSION_INTERNAL,']','\0'};
#endif

/* Construct a string literal encoding the version number components. */
#ifdef SIMULATE_VERSION_MAJOR
char const info_simulate_version[] = {
  'I', 'N', 'F', 'O', ':',
  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
  SIMULATE_VERSION_MAJOR,
# ifdef SIMULATE_VERSION_MINOR
  '.', SIMULATE_VERSION_MINOR,
#  ifdef SIMULATE_VERSION_PATCH
   '.', SIMULATE_VERSION_PATCH,
#   ifdef SIMULATE_VERSION_TWEAK
    '.', SIMULATE_VERSION_TWEAK,
#   endif
#  endif
# endif
  ']','\0'};
#endif

/* Construct the string literal in pieces to prevent the source from
   getting matched.  Store it in a pointer rather than an array
   because some compilers will just produce instructions to fill the
   array rather than assigning a pointer to a static array.  */
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";


set CMAKE_C_COMPILER_ID_RUN=1
set CMAKE_C_COMPILER_ID_TEST_FLAGS=-c;-Aa;-D__CLASSIC_C__
set CMAKE_C_COMPILER_ID_TOOL_MATCH_INDEX=2
set CMAKE_C_COMPILER_ID_TOOL_MATCH_REGEX=
Ld[^
]*(
[ 	]+[^
]*)*
[ 	]+([^ 	
]+)[^
]*-o[^
]*CompilerIdC/(\./)?(CompilerIdC.xctest/)?CompilerIdC[ 	
\"]
set CMAKE_C_COMPILER_ID_VENDORS=IAR
set CMAKE_C_COMPILER_ID_VENDOR_REGEX_IAR=IAR .+ Compiler
set CMAKE_C_COMPILER_LOADED=1
set CMAKE_C_COMPILER_NAMES=cc
set CMAKE_C_COMPILER_PRODUCED_FILES=CMakeCCompilerId.o
set CMAKE_C_COMPILER_PRODUCED_OUTPUT=
set CMAKE_C_COMPILER_RANLIB=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ranlib.exe
set CMAKE_C_COMPILER_RANLIB=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ranlib.exe
set CMAKE_C_COMPILER_VERSION=4.9.0
set CMAKE_C_COMPILER_VERSION_INTERNAL=
set CMAKE_C_COMPILER_WORKS=TRUE
set CMAKE_C_COMPILER_WRAPPER=
set CMAKE_C_COMPILE_FEATURES=
set CMAKE_C_COMPILE_OBJECT=<CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT>   -c <SOURCE>
set CMAKE_C_COMPILE_OPTIONS_IPO=-flto;-fno-fat-lto-objects
set CMAKE_C_COMPILE_OPTIONS_PIC=-fPIC
set CMAKE_C_COMPILE_OPTIONS_PIE=-fPIE
set CMAKE_C_COMPILE_OPTIONS_SYSROOT=--sysroot=
set CMAKE_C_COMPILE_OPTIONS_VISIBILITY=-fvisibility=
set CMAKE_C_CREATE_ASSEMBLY_SOURCE=<CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE>
set CMAKE_C_CREATE_PREPROCESSED_SOURCE=<CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE>
set CMAKE_C_CREATE_SHARED_LIBRARY=<CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>
set CMAKE_C_CREATE_SHARED_MODULE=<CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>
set CMAKE_C_FLAGS=-g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -mips32 -Wa,--noexecstack -Wformat -Werror=format-security -g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -mips32 -Wa,--noexecstack -Wformat -Werror=format-security 
set CMAKE_C_FLAGS=-g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -mips32 -Wa,--noexecstack -Wformat -Werror=format-security -g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -mips32 -Wa,--noexecstack -Wformat -Werror=format-security 
set CMAKE_C_FLAGS_DEBUG=-O0 -O0 
set CMAKE_C_FLAGS_DEBUG=-O0 -O0 
set CMAKE_C_FLAGS_DEBUG_INIT=-g
set CMAKE_C_FLAGS_INIT=
set CMAKE_C_FLAGS_MINSIZEREL=-Os -DNDEBUG
set CMAKE_C_FLAGS_MINSIZEREL_INIT=-Os -DNDEBUG
set CMAKE_C_FLAGS_RELEASE=-O2 -DNDEBUG -O2 -DNDEBUG 
set CMAKE_C_FLAGS_RELEASE=-O2 -DNDEBUG -O2 -DNDEBUG 
set CMAKE_C_FLAGS_RELEASE_INIT=-O3 -DNDEBUG
set CMAKE_C_FLAGS_RELWITHDEBINFO=-O2 -g -DNDEBUG
set CMAKE_C_FLAGS_RELWITHDEBINFO_INIT=-O2 -g -DNDEBUG
set CMAKE_C_IGNORE_EXTENSIONS=h;H;o;O;obj;OBJ;def;DEF;rc;RC
set CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES=/usr/include
set CMAKE_C_IMPLICIT_LINK_DIRECTORIES=
set CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES=
set CMAKE_C_IMPLICIT_LINK_LIBRARIES=
set CMAKE_C_INFORMATION_LOADED=1
set CMAKE_C_LIBRARY_ARCHITECTURE=
set CMAKE_C_LINKER_PREFERENCE=10
set CMAKE_C_LINK_EXECUTABLE=<CMAKE_C_COMPILER> <FLAGS> <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES>
set CMAKE_C_OUTPUT_EXTENSION=.o
set CMAKE_C_PLATFORM_ID=Linux
set CMAKE_C_SIMULATE_ID=
set CMAKE_C_SIMULATE_VERSION=
set CMAKE_C_SIZEOF_DATA_PTR=
set CMAKE_C_SOURCE_FILE_EXTENSIONS=c;m
set CMAKE_C_STANDARD_COMPUTED_DEFAULT=90
set CMAKE_C_STANDARD_DEFAULT=90
set CMAKE_C_STANDARD_LIBRARIES=-lm
set CMAKE_C_STANDARD_LIBRARIES_INIT=-lm
set CMAKE_C_VERBOSE_FLAG=-v
set CMAKE_C_XCODE_CURRENT_ARCH=
set CMAKE_DEPFILE_FLAGS_C=-MD -MT <OBJECT> -MF <DEPFILE>
set CMAKE_DEPFILE_FLAGS_CXX=-MD -MT <OBJECT> -MF <DEPFILE>
set CMAKE_DL_LIBS=dl
set CMAKE_EXECUTABLE_FORMAT=ELF
set CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG=-Wl,-rpath-link,
set CMAKE_EXECUTABLE_RPATH_LINK_C_FLAG=-Wl,-rpath-link,
set CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP=:
set CMAKE_EXECUTABLE_RUNTIME_C_FLAG_SEP=:
set CMAKE_EXECUTABLE_SUFFIX=
set CMAKE_EXE_EXPORTS_CXX_FLAG=-Wl,--export-dynamic
set CMAKE_EXE_EXPORTS_C_FLAG=-Wl,--export-dynamic
set CMAKE_EXE_LINKER_FLAGS=-Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--gc-sections -Wl,-z,nocopyreloc -Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--gc-sections -Wl,-z,nocopyreloc 
set CMAKE_EXE_LINKER_FLAGS=-Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--gc-sections -Wl,-z,nocopyreloc -Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--gc-sections -Wl,-z,nocopyreloc 
set CMAKE_EXE_LINKER_FLAGS_DEBUG=
set CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT=
set CMAKE_EXE_LINKER_FLAGS_INIT=
set CMAKE_EXE_LINKER_FLAGS_MINSIZEREL=
set CMAKE_EXE_LINKER_FLAGS_MINSIZEREL_INIT=
set CMAKE_EXE_LINKER_FLAGS_RELEASE=
set CMAKE_EXE_LINKER_FLAGS_RELEASE_INIT=
set CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO=
set CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT=
set CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS=-Wl,-Bdynamic
set CMAKE_EXE_LINK_DYNAMIC_C_FLAGS=-Wl,-Bdynamic
set CMAKE_EXE_LINK_STATIC_CXX_FLAGS=-Wl,-Bstatic
set CMAKE_EXE_LINK_STATIC_C_FLAGS=-Wl,-Bstatic
set CMAKE_EXPORT_COMPILE_COMMANDS=ON
set CMAKE_EXTRA_GENERATOR=
set CMAKE_FILES_DIRECTORY=/CMakeFiles
set CMAKE_FIND_LIBRARY_PREFIXES=lib
set CMAKE_FIND_LIBRARY_SUFFIXES=.so;.a
set CMAKE_FIND_ROOT_PATH=C:/Users/jomof/.test/ndks/android-ndk-r14b;C:/Users/jomof/.test/ndks/android-ndk-r14b
set CMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY
set CMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY
set CMAKE_FIND_ROOT_PATH_MODE_PACKAGE=ONLY
set CMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER
set CMAKE_GENERATOR=Ninja
set CMAKE_GENERATOR_PLATFORM=
set CMAKE_GENERATOR_TOOLSET=
set CMAKE_HOME_DIRECTORY=C:/Users/jomof/BuildServer/build/test-isolated/12slpnh4cifzo/mylibrary
set CMAKE_HOST_SYSTEM=Windows-10.0.17763
set CMAKE_HOST_SYSTEM_NAME=Windows
set CMAKE_HOST_SYSTEM_PROCESSOR=AMD64
set CMAKE_HOST_SYSTEM_VERSION=10.0.17763
set CMAKE_HOST_WIN32=1
set CMAKE_INCLUDE_FLAG_C=-I
set CMAKE_INCLUDE_FLAG_CXX=-I
set CMAKE_INCLUDE_FLAG_C_SEP=
set CMAKE_INCLUDE_SYSTEM_FLAG_C=-isystem 
set CMAKE_INCLUDE_SYSTEM_FLAG_CXX=-isystem 
set CMAKE_INSTALL_DEFAULT_COMPONENT_NAME=Unspecified
set CMAKE_INSTALL_PREFIX=C:/Program Files (x86)/Project
set CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT=1
set CMAKE_INSTALL_SO_NO_EXE=0
set CMAKE_LIBRARY_ARCHITECTURE_REGEX=[a-z0-9_]+(-[a-z0-9_]+)?-linux-gnu[a-z0-9_]*
set CMAKE_LIBRARY_OUTPUT_DIRECTORY=C:\Users\jomof\BuildServer\build\test-isolated\12slpnh4cifzo\mylibrary\build\intermediates\cmake\debug\obj\mips
set CMAKE_LIBRARY_PATH_FLAG=-L
set CMAKE_LIBRARY_PATH_TERMINATOR=
set CMAKE_LINKER=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-ld.exe
set CMAKE_LINKER=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-ld.exe
set CMAKE_LINK_LIBRARY_FLAG=-l
set CMAKE_LINK_LIBRARY_SUFFIX=
set CMAKE_MAJOR_VERSION=3
set CMAKE_MAKE_PROGRAM=C:\Users\jomof\AppData\Local\Android\Sdk\cmake\3.10.2.4988404\bin\ninja.exe
set CMAKE_MATCH_0=Pkg.Desc = Android NDK
Pkg.Revision = 14.1.3816874
set CMAKE_MATCH_1=14
set CMAKE_MATCH_2=1
set CMAKE_MATCH_3=3816874
set CMAKE_MATCH_COUNT=3
set CMAKE_MINIMUM_REQUIRED_VERSION=3.4.1
set CMAKE_MINOR_VERSION=10
set CMAKE_MODULE_LINKER_FLAGS=-Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now 
set CMAKE_MODULE_LINKER_FLAGS=-Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now 
set CMAKE_MODULE_LINKER_FLAGS_DEBUG=
set CMAKE_MODULE_LINKER_FLAGS_DEBUG_INIT=
set CMAKE_MODULE_LINKER_FLAGS_INIT=
set CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL=
set CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL_INIT=
set CMAKE_MODULE_LINKER_FLAGS_RELEASE=
set CMAKE_MODULE_LINKER_FLAGS_RELEASE_INIT=
set CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO=
set CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO_INIT=
set CMAKE_NM=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-nm.exe
set CMAKE_OBJCOPY=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-objcopy.exe
set CMAKE_OBJDUMP=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-objdump.exe
set CMAKE_PARENT_LIST_FILE=C:/Users/jomof/BuildServer/build/test-isolated/12slpnh4cifzo/mylibrary/CMakeLists.txt
set CMAKE_PATCH_VERSION=2
set CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES=/lib;/lib32;/lib64;/usr/lib;/usr/lib32;/usr/lib64
set CMAKE_PLATFORM_INFO_DIR=C:/Users/jomof/BuildServer/build/test-isolated/12slpnh4cifzo/mylibrary/.externalNativeBuild/cmake/debug/mips/CMakeFiles/3.10.2
set CMAKE_PLATFORM_INFO_INITIALIZED=1
set CMAKE_PLATFORM_NO_VERSIONED_SONAME=1
set CMAKE_PLATFORM_USES_PATH_WHEN_NO_SONAME=1
set CMAKE_PROJECT_NAME=Project
set CMAKE_RANLIB=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ranlib.exe
set CMAKE_RANLIB=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-gcc-ranlib.exe
set CMAKE_ROOT=C:/Users/jomof/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10
set CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS=-shared
set CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS=-shared
set CMAKE_SHARED_LIBRARY_CXX_FLAGS=-fPIC
set CMAKE_SHARED_LIBRARY_C_FLAGS=-fPIC
set CMAKE_SHARED_LIBRARY_LINK_C_FLAGS=
set CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS=-Wl,-Bdynamic
set CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_C_FLAGS=-Wl,-Bdynamic
set CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS=-Wl,-Bstatic
set CMAKE_SHARED_LIBRARY_LINK_STATIC_C_FLAGS=-Wl,-Bstatic
set CMAKE_SHARED_LIBRARY_PREFIX=lib
set CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG=-Wl,-rpath-link,
set CMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG=-Wl,-rpath-link,
set CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP=:
set CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG=
set CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP=:
set CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG=-Wl,-soname,
set CMAKE_SHARED_LIBRARY_SONAME_C_FLAG=-Wl,-soname,
set CMAKE_SHARED_LIBRARY_SUFFIX=.so
set CMAKE_SHARED_LINKER_FLAGS=-Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now 
set CMAKE_SHARED_LINKER_FLAGS=-Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now 
set CMAKE_SHARED_LINKER_FLAGS_DEBUG=
set CMAKE_SHARED_LINKER_FLAGS_DEBUG_INIT=
set CMAKE_SHARED_LINKER_FLAGS_INIT=
set CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL=
set CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL_INIT=
set CMAKE_SHARED_LINKER_FLAGS_RELEASE=
set CMAKE_SHARED_LINKER_FLAGS_RELEASE_INIT=
set CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO=
set CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO_INIT=
set CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS=-shared
set CMAKE_SHARED_MODULE_CREATE_C_FLAGS=-shared
set CMAKE_SHARED_MODULE_CXX_FLAGS=-fPIC
set CMAKE_SHARED_MODULE_C_FLAGS=-fPIC
set CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS=-Wl,-Bdynamic
set CMAKE_SHARED_MODULE_LINK_DYNAMIC_C_FLAGS=-Wl,-Bdynamic
set CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS=-Wl,-Bstatic
set CMAKE_SHARED_MODULE_LINK_STATIC_C_FLAGS=-Wl,-Bstatic
set CMAKE_SHARED_MODULE_PREFIX=lib
set CMAKE_SHARED_MODULE_SUFFIX=.so
set CMAKE_SKIP_INSTALL_RPATH=NO
set CMAKE_SKIP_RPATH=NO
set CMAKE_SOURCE_DIR=C:/Users/jomof/BuildServer/build/test-isolated/12slpnh4cifzo/mylibrary
set CMAKE_STATIC_LIBRARY_PREFIX=lib
set CMAKE_STATIC_LIBRARY_SUFFIX=.a
set CMAKE_STATIC_LINKER_FLAGS=
set CMAKE_STATIC_LINKER_FLAGS_DEBUG=
set CMAKE_STATIC_LINKER_FLAGS_DEBUG_INIT=
set CMAKE_STATIC_LINKER_FLAGS_INIT=
set CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL=
set CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL_INIT=
set CMAKE_STATIC_LINKER_FLAGS_RELEASE=
set CMAKE_STATIC_LINKER_FLAGS_RELEASE_INIT=
set CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO=
set CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO_INIT=
set CMAKE_STRIP=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-strip.exe
set CMAKE_SYSROOT=C:/Users/jomof/.test/ndks/android-ndk-r14b/platforms/android-15/arch-mips
set CMAKE_SYSTEM=Android-1
set CMAKE_SYSTEM_INCLUDE_PATH=/usr/include/X11
set CMAKE_SYSTEM_INFO_FILE=Platform/Android
set CMAKE_SYSTEM_LIBRARY_PATH=/usr/lib/X11
set CMAKE_SYSTEM_LOADED=1
set CMAKE_SYSTEM_NAME=Android
set CMAKE_SYSTEM_NAME=Android
set CMAKE_SYSTEM_PREFIX_PATH=/usr/local;/usr;/;C:/Users/jomof/AppData/Local/Android/Sdk/cmake/3.10.2.4988404;C:/Program Files (x86)/Project;/usr/X11R6;/usr/pkg;/opt
set CMAKE_SYSTEM_PROCESSOR=mips
set CMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED=1
set CMAKE_SYSTEM_SPECIFIC_INITIALIZE_LOADED=1
set CMAKE_SYSTEM_VERSION=1
set CMAKE_SYSTEM_VERSION=1
set CMAKE_TOOLCHAIN_FILE=C:/Users/jomof/BuildServer/build/test-isolated/12slpnh4cifzo/mylibrary/.externalNativeBuild/cmake/debug/mips/pre-ndk-r15-wrapper-android.toolchain.cmake
set CMAKE_TRY_COMPILE_PLATFORM_VARIABLES=ANDROID_TOOLCHAIN;ANDROID_ABI;ANDROID_PLATFORM;ANDROID_STL;ANDROID_PIE;ANDROID_CPP_FEATURES;ANDROID_ALLOW_UNDEFINED_SYMBOLS;ANDROID_ARM_MODE;ANDROID_ARM_NEON;ANDROID_DISABLE_NO_EXECUTE;ANDROID_DISABLE_RELRO;ANDROID_DISABLE_FORMAT_STRING_CHECKS;ANDROID_CCACHE;ANDROID_UNIFIED_HEADERS
set CMAKE_TWEAK_VERSION=0
set CMAKE_VERBOSE_MAKEFILE=FALSE
set CMAKE_VERSION=3.10.2
set INCLUDE_CMAKE_TOOLCHAIN_FILE_IF_REQUIRED=include("C:/Users/jomof/BuildServer/build/test-isolated/12slpnh4cifzo/mylibrary/.externalNativeBuild/cmake/debug/mips/pre-ndk-r15-wrapper-android.toolchain.cmake")
set MIPS=TRUE
set MSVC_CXX_ARCHITECTURE_ID=
set MSVC_C_ARCHITECTURE_ID=
set PRESET_CMAKE_SYSTEM_NAME=TRUE
set PROJECT_BINARY_DIR=C:/Users/jomof/BuildServer/build/test-isolated/12slpnh4cifzo/mylibrary/.externalNativeBuild/cmake/debug/mips
set PROJECT_NAME=Project
set PROJECT_SOURCE_DIR=C:/Users/jomof/BuildServer/build/test-isolated/12slpnh4cifzo/mylibrary
set Project_BINARY_DIR=C:/Users/jomof/BuildServer/build/test-isolated/12slpnh4cifzo/mylibrary/.externalNativeBuild/cmake/debug/mips
set Project_SOURCE_DIR=C:/Users/jomof/BuildServer/build/test-isolated/12slpnh4cifzo/mylibrary
set RUN_CONFIGURE=ON
set TEST_ANDROID_NDKBETA=0
set TEST_ANDROID_NDKBUILD=3816874
set TEST_ANDROID_NDKMAJOR=14
set TEST_ANDROID_NDKMINOR=1
set TEST_ANDROID_NDKREVISION=14.1.3816874
set TEST_ANDROID_NDKREVISION_REGEX=^Pkg\.Desc = Android NDK
Pkg\.Revision = ([0-9]+)\.([0-9]+)\.([0-9]+)(-beta([0-9]+))?
set TEST_ANDROID_NDKSOURCE_PROPERTIES=Pkg.Desc = Android NDK
Pkg.Revision = 14.1.3816874

set TOOL_OS_SUFFIX=.exe
set UNIX=1
set _CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER=YES
set _CMAKE_CXX_IPO_SUPPORTED_BY_CMAKE=YES
set _CMAKE_C_IPO_MAY_BE_SUPPORTED_BY_COMPILER=YES
set _CMAKE_C_IPO_SUPPORTED_BY_CMAKE=YES
set _CMAKE_INSTALL_DIR=C:/Users/jomof/AppData/Local/Android/Sdk/cmake/3.10.2.4988404
set _CMAKE_TOOLCHAIN_LOCATION=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin
set _CMAKE_TOOLCHAIN_PREFIX=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin/mips64el-linux-android-
set _CMAKE_USER_CXX_COMPILER_PATH=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin
set _CMAKE_USER_C_COMPILER_PATH=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin
set _INCLUDED_FILE=C:/Users/jomof/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android-GNU-CXX.cmake
set _INCLUDED_SYSTEM_INFO_FILE=C:/Users/jomof/AppData/Local/Android/Sdk/cmake/3.10.2.4988404/share/cmake-3.10/Modules/Platform/Android.cmake
set _INCLUDED_TOOLCHAIN_FILE=C:/Users/jomof/BuildServer/build/test-isolated/12slpnh4cifzo/mylibrary/.externalNativeBuild/cmake/debug/mips/pre-ndk-r15-wrapper-android.toolchain.cmake
set _IN_TC=0
set _SET_CMAKE_CXX_COMPILER_ARCHITECTURE_ID=
set _SET_CMAKE_C_COMPILER_ARCHITECTURE_ID=
set __ANDROID_COMPILER_GNU=1
set __ANDROID_DETERMINE_COMPILER=1
set __COMPILER_CMAKE_COMMON_COMPILER_MACROS=1
set __COMPILER_GNU=1
set __UNIX_PATHS_INCLUDED=1
set __gcc_hints=C:/Users/jomof/.test/ndks/android-ndk-r14b/toolchains/mips64el-linux-android-4.9/prebuilt/windows-x86_64/bin
set __lto_flags=-flto;-fno-fat-lto-objects
set __std_ver_pair=
set __version_x=4
set __version_x_y=4.9
set c=
set library=
set native-lib_LIB_DEPENDS=
set t=
set type=
